#!/bin/sh

PREFIX=".mp4"

# A POSIX variable
OPTIND=1         # Reset in case getopts has been used previously in the shell.
FORMATS="240 360 480 720 1080"

show_help() {
	cat << EOF
Usage: convertToH264 [OPTIONS] [FILE]... 
 
    -h	        Show help
    -r          Remove audio
    -s FORMAT   Scale (resize) the input video, format: "240", "360", "480", "720", "1080"
    -t TIME     Trim the input video starting from TIME, TIME format is: hh:mm:ss
    
EOF
}

if [ $# -eq 0 ]; then
    show_help 
fi

audio_filter="-c:a aac -strict -2"

while getopts ":hrs:t:" opt; do
    case $opt in
        h)
            show_help
            exit 0
            ;;
        r)
            audio_filter="-an"
            PREFIX="_na$PREFIX"
            ;;
        s)
            if [[ $FORMATS == *$OPTARG* ]]; then
                video_filter="-vf scale=-2:$OPTARG"
                PREFIX="_$OPTARG"p"$PREFIX"
            else
            	echo "Invalid video format: $OPTARG" >&2
		        exit 1
            fi
      	    ;;
        t)
            trim_time="-ss $OPTARG"
            ;;
    	\?)
      	    echo "Invalid option: -$OPTARG" >&2
      	    exit 1
      	    ;;
    	:)
      	    echo "Option -$OPTARG requires an argument." >&2
      	    exit 1
      	    ;;
  	esac
done

shift "$((OPTIND-1))"

for i in "$@"; do
    input_file=$(realpath "$i")
    out_file="$input_file$PREFIX"
    ffmpeg -i "$input_file" $video_filter -c:v libx264 -profile:v high -level 4.2 $audio_filter $trim_time "$out_file"
done

